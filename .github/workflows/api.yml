name: API
'on':
  - push
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
            MYSQL_ROOT_PASSWORD: root
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      memcached:
        image: 'memcached:alpine'
        ports:
            - '11211:11211'

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Ruby 3.0
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2

      - name: Cache Gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client libmysqlclient-dev
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql

      - name: Bundle install
        run: |
          cd api
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Setup Database
        run: |
          cd api
          cp config/database.yml.github-actions config/database.yml
          bundle exec rails db:prepare
        env:
          RAILS_ENV: test
          DB_USER: root
          DB_PASSWORD: root

      - name: Run Rubocop
        run: |
          cd api
          bundle exec rubocop

      - name: Run RSpec
        run: |
          cd api
          COVERAGE=true bundle exec rspec -f j -o tmp/rspec_results.json -f p --require rails_helper
        env:
          RAILS_ENV: test
          DB_USER: root
          DB_PASSWORD: root

      - name: RSpec Report
        uses: SonicGarden/rspec-report-action@v1
        if: always()
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          json-path: tmp/rspec_results.json